setwd("./R_language/")
load("~/R_language/.RData")
View(Pd2)
View(Pd2)
View(pd2)
View(pd2)
View(pd_new)
View(pd_new)
### to create a new variable that is function of alreaddy existing variable
## Library : dplyr
## using mutate function
#install.packages("dplyr")
library(dplyr)
View(pd)
### LEFT JOIN
pd_left.join = left_join(pd,pd_new,by="name")
View(pd_new)
View(pd)
View(Pd)
rm(Pd)
edit(pd_new)
## 2 data frame
pd_new=data.frame("name"=c("A","C","B"),"Department"=c("PSE","Data Analysis","PSE"))
### LEFT JOIN
pd_left.join = left_join(pd,pd_new,by="name")
View(pd_left.join)
View(pd_left.join)
### LEFT JOIN
pd_left.join<-left_join(pd,pd_new,by="name")
View(pd_left.join)
View(pd_left.join)
View(pd_left.join)
View(pd_left.join)
### RIGHT JOIN
pd_right.join <- right_join(pd,pd_new,by="name")
pd_right.join
### INNER JOIN (retain and merges those rows with ids present in both dataframes)
pd_inner.join = inner_join(pd,pd_new,by="name")
pd_inner.join
isTRUE(2>3)
### Arithmetic ,Logical and Matrix opertaion in R
### Matrices
A=matrix(c(1,2,3,4,5,6,7,8,9),nrow = 3,ncol = 3,byrow = TRUE)
View(A)
View(A)
A
### Arithmetic ,Logical and Matrix opertaion in R
### Matrices
A=matrix(c(1,2,3,4,5,6,7,8,9),nrow = 3,ncol = 3)
View(A)
matrix(3,3,4)
daig(4,3,3)
diag(4,3,3)
diag(c(4,5,6),4,3)
diag(c(4,5,6),3,4)
sampl
sampl=matrix(c(3,-2,5,0))
sampl
sampl=matrix(3,-2,5,0)
sampl=matrix(3,-2,5,0,nrow = 2,ncol = 2)
sampl
View(sampl)
View(sampl)
sampl=matrix(c(3,-2,5,0),nrow = 2,ncol = 2)
sampl
source('~/R_language/w107.R')
source('~/R_language/w107.R', echo=TRUE)
### Naming row & cols
colnames(A)=c("a,b,c")
rownames(A)=c("d,e,f")
### Naming row & cols
colnames(A)=c("a","b","c")
rownames(A)=c("d","e","f")
View(A)
View(A)
A[,1:3]
A[,1:]
A[,1]
A[,1:2]
A[1:2]
A[1:2,]
A[-1:-2,]
A[1:-2,]
A[-2,]
## Accessing elements
## by name pf row and col
A[,c("c","b")]
A[c("f","d"),] ## all columns and given rows
A[1,2]
A[3,]
A[:3,]
A[-2,]
A[-2,-2]
## change 9 to 10
A[3,3]
## change 9 to 10
A[3,3]=10
A
##  2row  3 col
A[2,] & A[,3]
##  2row  3 col
A[2,3]
##  2row  3 col
A[0:2,3]
##
A[c("b"),c("f")]
source('~/R_language/w108.R')
source('~/R_language/w108.R', echo=TRUE)
#### ACCESSING Submatrices
A[c(1,3),1:3] ##
#### ACCESSING Submatrices
A[c(1,3),1:2] ## first 2 colmns of 1 & 3 row
A[c(1:2),c(1:3)]
A[c(1,2),c(1,3)]
### Matrix Concatenation
## Refers to merging of row or column to matrix
## Conatenation(adding) row to matrix is by rbind function
## Concatenation(adding) col by cbind
B=[10,11,12]
### Matrix Concatenation
## Refers to merging of row or column to matrix
## Conatenation(adding) row to matrix is by rbind function
## Concatenation(adding) col by cbind
B=c(10,11,12)
rbind(A,B)
A
cbind(A,B)
X=cbind(A,B)
colnames(X)=c("a","b","c","d")
X
typeof(B)
is.list(A)
is.list(B)
is.vector(B)
is.vector(A)
is.matrix(A)
is.matrix(B)
### Matrix Concatenation
## Refers to merging of row or column to matrix
## Conatenation(adding) row to matrix is by rbind function
## Concatenation(adding) col by cbind
B=matrix(c(11,12,13,14,15,16,17,18,19),nrow = 3,ncol = 3,byrow = T)
View(B)
View(B)
rbind(A,B)
X=cbind(A,B)
colnames(X)=c("a","b","c","d")
colnames(X)=c("a","b","c")
colnames(X)=c("a","b","c")
#### Matrix operations Algebra
A+B
A-B
B-A
A-(-B)
-A-(-B)
### Multiplication
A%*%B
### Divison (its element vise divsion)
A/B
B/A
c(1:4)
c(6,3)
c(1:4)*c(6,3)
A[2:3]
View(A)
View(A)
A[-3]
A[-3,]
diag(A)
diag(x=A,5,5)
as.matrix(A)
as.mat(A)
is.matrix([A])
